{"version":3,"file":"static/js/266.f9a9d75b.chunk.js","mappings":"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","sources":["components/ListedFilm/ListedFilm.styled.js","components/ListedFilm/ListedFilm.jsx","components/FilmsList/FilmsList.styled.js","components/FilmsList/FilmsList.jsx","data/api.js","pages/Home.js","utils/Error/Error.styled.js","utils/Error/Error.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Item = styled.li`\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n    0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  display: inline-block;\n  padding: 10px;\n  &:hover,\n  &:focus {\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item, Link } from './ListedFilm.styled';\n\nexport const ListedFilm = ({ id, title }) => {\n  const location = useLocation();\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </Item>\n  );\n};\n\nListedFilm.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ListOfFilms = styled.ul`\n  max-width: calc(100vw - 48px);\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { ListedFilm } from 'components/ListedFilm/ListedFilm';\nimport { ListOfFilms } from './FilmsList.styled';\n\nexport const FilmsList = ({ films }) => {\n  return (\n    <ListOfFilms>\n      {films.map(({ id, title }) => {\n        return <ListedFilm key={id} id={id} title={title} />;\n      })}\n    </ListOfFilms>\n  );\n};\n\nFilmsList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import axios from 'axios';\n\nconst TMDB_KEY = 'e5b8bd1b82d4f5b68280cf1e2b92e5f6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/week?api_key=${TMDB_KEY}`);\n  return results.map(({ title, id }) => ({ title, id }));\n};\nexport const getMovieByTextQuery = async textQuery => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${TMDB_KEY}&query=${textQuery}&page=1`);\n  return results.map(({ title, id }) => ({ title, id }));\n};\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${TMDB_KEY}`);\n  const { poster_path, title, release_date, vote_average, overview, genres } = data;\n  return { poster_path, title, release_date, vote_average, overview, genres };\n};\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${TMDB_KEY}`);\n  return data.cast.map(({ profile_path, name, character }) => ({\n    profile_path,\n    name,\n    character,\n  }));\n};\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${TMDB_KEY}&page=1`);\n  return data.results.map(({ author, content }) => ({ author, content }));\n};\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport * as API from 'data/api';\nimport { FilmsList } from 'components/FilmsList/FilmsList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Error } from 'utils/Error/Error';\n\nexport default function Home() {\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchTending = async () => {\n      try {\n        setIsLoading(true);\n        const films = await API.getTrendingFilms();\n        setMoviesList(films);\n        setError('');\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTending();\n  }, []);\n  return (\n    <main>\n      <h1>Films trending today</h1>\n      {isLoading && <Loader />}\n      {moviesList.length > 0 && <FilmsList films={moviesList} />}\n      {error && <Error />}\n    </main>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ErrorMsg = styled.p`\n  margin: 40px auto;\n  width: max-content;\n  max-width: 95vw;\n  padding: 20px 40px;\n  text-align: center;\n  line-height: 1.71;\n  background-color: #aa3939;\n  color: #ffaaaa;\n  border: 1.5px solid #801515;\n  border-radius: 10px;\n`;\n","import { ErrorMsg } from './Error.styled';\n\nexport const Error = ({ textError }) => {\n  return (\n    <ErrorMsg>\n      Oops! Something's wrong:\n      <br />‚ùå {textError}\n      <br />\n      Please, refresh this page or try again later\n    </ErrorMsg>\n  );\n};\n"],"names":["Item","styled","Link","NavLink","ListedFilm","id","title","location","useLocation","to","state","from","ListOfFilms","FilmsList","films","map","TMDB_KEY","axios","getTrendingFilms","results","data","getMovieByTextQuery","textQuery","getMovieDetails","poster_path","release_date","vote_average","overview","genres","getMovieCredits","cast","profile_path","name","character","getMovieReviews","author","content","Home","useState","moviesList","setMoviesList","isLoading","setIsLoading","error","setError","useEffect","fetchTending","API","message","length","ErrorMsg","Error","textError"],"sourceRoot":""}