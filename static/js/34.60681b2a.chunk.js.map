{"version":3,"file":"static/js/34.60681b2a.chunk.js","mappings":"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","sources":["components/reusable/Error/Error.styled.js","components/reusable/Error/Error.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","components/reusable/Return/Return.styled.js","components/reusable/Return/Return.jsx","pages/MovieDetails.js","utils/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorMsg = styled.p`\n  margin: 40px auto;\n  width: max-content;\n  max-width: 95vw;\n  padding: 20px 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  text-align: center;\n  line-height: 1.71;\n  background-color: lightgray;\n  border: 2px solid black;\n  border-radius: 10px;\n`;\n","import { ErrorMsg } from './Error.styled';\nimport defaultIMG from 'assets/defaultIMG.png';\n\nexport const Error = ({ textError }) => {\n  return (\n    <ErrorMsg>\n      <img src={defaultIMG} alt=\"error\" width={100} />\n      Oops! Something's wrong:\n      <br />‚ùå {textError}\n      <br />\n      Please, refresh this page or try again later\n    </ErrorMsg>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 10px;\n  padding-bottom: 15px;\n  border-bottom: 2px solid lightgray;\n  & div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n  @media (max-width: 767px) {\n    flex-direction: column;\n  }\n`;\n\nexport const PosterContainer = styled.div`\n  width: 400px;\n  max-width: 30vw;\n  flex-shrink: 0;\n  border-radius: 5px;\n  overflow: hidden;\n  @media (max-width: 767px) {\n    width: 100%;\n    max-width: 100%;\n  }\n`;\n\nexport const RatingColorizer = styled.b`\n  display: inline-block;\n  text-align: center;\n  width: 44px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border-radius: 50%;\n  border: 2.5px solid;\n  ${prop => {\n    switch (prop.variant) {\n      case 'red':\n        return 'color: #a40000; background-color: #f0a3a3; border-color: #a40000';\n      case 'orange':\n        return 'color: #c46300; background-color: #FFA55A; border-color: #c46300';\n      case 'green':\n        return 'color: #197504; background-color: #98d752; border-color: #197504';\n      case 'pink':\n        return 'color: #7c0ca0; background-color: #ffb0cd; border-color: #7c0ca0';\n      default:\n        return 'color: #000000; background-color: #D3D3D3; border-color: #000000';\n    }\n  }};\n`;\n\nexport const AddInfoList = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 15px;\n`;\n\nexport const AddInfoOption = styled.li`\n  padding: 5px 0px;\n  color: #9c0309;\n  text-transform: uppercase;\n  border-radius: 4px;\n  text-decoration: none;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  PosterContainer,\n  RatingColorizer,\n  AddInfoList,\n  AddInfoOption,\n} from './MovieInfo.styled';\nimport defaultIMG from 'assets/defaultIMG.png';\n\nexport const MovieInfo = ({ movie }) => {\n  const location = useLocation();\n  const { title, overview, poster_path, vote_average, genres, release_date } = movie;\n  const releaseDate = release_date.slice(0, 4);\n  const posterPath = poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : defaultIMG;\n  const voteAverage = vote_average.toFixed(0) * 10;\n  const getColor = () => {\n    if (voteAverage > 0 && voteAverage <= 60) {\n      return 'red';\n    }\n    if (voteAverage > 60 && voteAverage <= 85) {\n      return 'orange';\n    }\n    if (voteAverage > 85 && voteAverage <= 97) {\n      return 'green';\n    }\n    if (voteAverage > 97) {\n      return 'pink';\n    }\n  };\n  const genresList =\n    genres.length > 0 ? genres.map(({ name }) => name).join(', ') : 'No information';\n  const ReturnHref = location.state?.from ?? '/';\n  return (\n    <>\n      <Container>\n        <PosterContainer>\n          <img src={posterPath} alt={title} />\n        </PosterContainer>\n        <div>\n          <h2>\n            {title} ({releaseDate})\n          </h2>\n          <p>\n            User Score: <RatingColorizer variant={getColor()}>{voteAverage}%</RatingColorizer>\n          </p>\n          <span>\n            <b>Overview:</b>\n            <p>{overview}</p>\n          </span>\n          <span>\n            <b>Genres:</b>\n            <p>{genresList}</p>\n          </span>\n        </div>\n      </Container>\n      <h3>Additional information</h3>\n      <AddInfoList>\n        <AddInfoOption>\n          <Link to=\"cast\" state={{ from: ReturnHref }}>\n            Cast\n          </Link>\n        </AddInfoOption>\n        <AddInfoOption>\n          <Link to=\"reviews\" state={{ from: ReturnHref }}>\n            Reviews\n          </Link>\n        </AddInfoOption>\n      </AddInfoList>\n    </>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.exact({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  padding: 10px;\n  border-radius: 4px;\n  text-transform: uppercase;\n  text-decoration: none;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BackLink } from './Return.styled';\nimport { IoArrowUndoSharp } from 'react-icons/io5';\n\nexport const Return = ({ to, children }) => {\n  return (\n    <BackLink to={to}>\n      <IoArrowUndoSharp size={25} />\n      {children}\n    </BackLink>\n  );\n};\n\nReturn.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  children: PropTypes.string.isRequired,\n};\n","import { useEffect, useState, Suspense } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport * as API from 'utils/api';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { Return } from 'components/reusable/Return/Return';\nimport { Loader } from 'components/reusable/Loader/Loader';\nimport { Error } from 'components/reusable/Error/Error';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setIsLoading(true);\n        const film = await API.getMovieDetails(movieId);\n        setMovie(film);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n  const ReturnHref = location.state?.from ?? '/';\n  return (\n    <main>\n      <Return to={ReturnHref}>Go back</Return>\n      {isLoading && <Loader />}\n      {movie && <MovieInfo movie={movie} />}\n      {error && <Error />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n      <Return to={ReturnHref}>Go back</Return>\n    </main>\n  );\n}\n","import axios from 'axios';\n\nconst TMDB_KEY = 'e5b8bd1b82d4f5b68280cf1e2b92e5f6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/week?api_key=${TMDB_KEY}`);\n  return results.map(({ title, id }) => ({ title, id }));\n};\nexport const getMovieByTextQuery = async textQuery => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${TMDB_KEY}&query=${textQuery}&page=1`);\n  return results.map(({ title, id }) => ({ title, id }));\n};\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${TMDB_KEY}`);\n  const { poster_path, title, release_date, vote_average, overview, genres } = data;\n  return { poster_path, title, release_date, vote_average, overview, genres };\n};\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${TMDB_KEY}`);\n  return data.cast.map(({ profile_path, name, character }) => ({\n    profile_path,\n    name,\n    character,\n  }));\n};\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${TMDB_KEY}&page=1`);\n  return data.results.map(({ author, content }) => ({ author, content }));\n};\n"],"names":["ErrorMsg","styled","Error","textError","src","defaultIMG","alt","width","Container","PosterContainer","RatingColorizer","prop","variant","AddInfoList","AddInfoOption","MovieInfo","movie","location","useLocation","title","overview","poster_path","vote_average","genres","releaseDate","release_date","slice","posterPath","voteAverage","toFixed","genresList","length","map","name","join","ReturnHref","state","from","to","BackLink","Link","Return","children","size","MovieDetails","movieId","useParams","useState","setMovie","isLoading","setIsLoading","error","setError","useEffect","fetchMovie","API","film","message","Loader","Suspense","fallback","TMDB_KEY","axios","getTrendingFilms","results","data","id","getMovieByTextQuery","textQuery","getMovieDetails","getMovieCredits","cast","profile_path","character","getMovieReviews","author","content"],"sourceRoot":""}