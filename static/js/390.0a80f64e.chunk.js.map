{"version":3,"file":"static/js/390.0a80f64e.chunk.js","mappings":"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","sources":["components/reusable/Error/Error.styled.js","components/reusable/Error/Error.jsx","components/reusable/Toasts/toaster.js","sections/Reviews/Reviews.styled.js","sections/Reviews/Reviews.jsx","utils/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorMsg = styled.p`\n  margin: 40px auto;\n  width: max-content;\n  max-width: 95vw;\n  padding: 20px 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  text-align: center;\n  line-height: 1.71;\n  background-color: lightgray;\n  border: 2px solid black;\n  border-radius: 10px;\n`;\n","import { ErrorMsg } from './Error.styled';\nimport errorIMG from 'assets/errorIMG.png';\n\nexport const Error = ({ textError }) => {\n  return (\n    <ErrorMsg>\n      <img src={errorIMG} alt=\"error\" width={100} />\n      Oops! Something's wrong:\n      <br />‚ùå {textError}\n      <br />\n      Please, refresh this page or try again later\n    </ErrorMsg>\n  );\n};\n","import toast from 'react-hot-toast';\nimport {\n  GiSkullInJar,\n  GiSkullCrossedBones,\n  GiHappySkull,\n  GiChewedSkull,\n  GiSurprisedSkull,\n  GiGooSkull,\n  GiPirateSkull,\n} from 'react-icons/gi';\n\nconst toastConfig = {\n  incorrectQuery: {\n    icon: <GiSkullInJar size={40} color=\"#9c0a21\" />,\n    style: {\n      color: 'black',\n      background: 'rgba(218, 212, 212, 0.8)',\n    },\n  },\n  repeatedQuery: {\n    icon: <GiSkullCrossedBones size={40} color=\"#9c0a21\" />,\n    style: {\n      color: 'black',\n      background: 'rgba(218, 212, 212, 0.8)',\n    },\n  },\n  filmsFound: {\n    icon: <GiHappySkull size={40} color=\"#9c0a21\" />,\n    style: {\n      color: 'black',\n      background: 'rgba(218, 212, 212, 0.8)',\n    },\n  },\n  nothingFound: {\n    icon: <GiChewedSkull size={40} color=\"#9c0a21\" />,\n    style: {\n      color: 'black',\n      background: 'rgba(218, 212, 212, 0.8)',\n    },\n  },\n  noCastInfo: {\n    icon: <GiSurprisedSkull size={40} color=\"#9c0a21\" />,\n    style: {\n      color: 'black',\n      background: 'rgba(218, 212, 212, 0.8)',\n    },\n  },\n  reviewsFound: {\n    icon: <GiGooSkull size={40} color=\"#9c0a21\" />,\n    style: {\n      color: 'black',\n      background: 'rgba(218, 212, 212, 0.8)',\n    },\n  },\n  noReviews: {\n    icon: <GiPirateSkull size={40} color=\"#9c0a21\" />,\n    style: {\n      color: 'black',\n      background: 'rgba(218, 212, 212, 0.8)',\n    },\n  },\n};\n\nexport const showToast = (text, type) => {\n  toast(text, toastConfig[type]);\n};\n","import styled from '@emotion/styled';\n\nexport const ListOfReviews = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Review = styled.li`\n  display: flex;\n  flex-direction: column;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'utils/api';\nimport { ListOfReviews, Review } from './Reviews.styled';\nimport { Loader } from 'components/reusable/Loader/Loader';\nimport { showToast } from 'components/reusable/Toasts/toaster';\nimport { Error } from 'components/reusable/Error/Error';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setIsLoading(true);\n        const reviews = await API.getMovieReviews(movieId);\n        if (!reviews.length) {\n          return showToast(\n            `No one has left a review yet. If you want, yours can be first`,\n            'noReviews'\n          );\n        }\n        setReviews(reviews);\n        showToast(`Here's what people say about this film`, 'reviewsFound');\n        setError('');\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {reviews.length > 0 && (\n        <ListOfReviews>\n          {reviews.map(({ author, content }) => (\n            <Review key={author}>\n              <p>\n                <b>Author: </b>\n                {author}\n              </p>\n              <p>{content}</p>\n            </Review>\n          ))}\n        </ListOfReviews>\n      )}\n      {error && <Error />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst TMDB_KEY = 'e5b8bd1b82d4f5b68280cf1e2b92e5f6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/week?api_key=${TMDB_KEY}`);\n  return results.map(({ title, id }) => ({ title, id }));\n};\nexport const getMovieByTextQuery = async textQuery => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${TMDB_KEY}&query=${textQuery}&page=1`);\n  return results.map(({ title, id }) => ({ title, id }));\n};\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${TMDB_KEY}`);\n  const { poster_path, title, release_date, vote_average, overview, genres } = data;\n  return { poster_path, title, release_date, vote_average, overview, genres };\n};\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${TMDB_KEY}`);\n  return data.cast.map(({ profile_path, name, character }) => ({\n    profile_path,\n    name,\n    character,\n  }));\n};\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${TMDB_KEY}&page=1`);\n  return data.results.map(({ author, content }) => ({ author, content }));\n};\n"],"names":["ErrorMsg","styled","Error","textError","src","errorIMG","alt","width","toastConfig","incorrectQuery","icon","size","color","style","background","repeatedQuery","filmsFound","nothingFound","noCastInfo","reviewsFound","noReviews","showToast","text","type","toast","ListOfReviews","Review","Reviews","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useEffect","fetchReviews","API","length","message","Loader","map","author","content","TMDB_KEY","axios","getTrendingFilms","results","data","title","id","getMovieByTextQuery","textQuery","getMovieDetails","poster_path","release_date","vote_average","overview","genres","getMovieCredits","cast","profile_path","name","character","getMovieReviews"],"sourceRoot":""}